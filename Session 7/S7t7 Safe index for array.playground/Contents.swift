
import Foundation

extension Collection where Indices.Iterator.Element == Index, Index == Int {
    public subscript (safe index: Index) -> Iterator.Element? {
        return index < self.count ? self[index] : nil
    }
}

extension Collection where Indices.Iterator.Element == Index {
    public subscript (safe index: Index) -> Iterator.Element? {
        return  indices.contains(index) ? self[index] : nil
    }
}


let oneDementionArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
oneDementionArray[safe: 8]
oneDementionArray[safe: 10]

let twoDementionArray = [[(0, 0), (0, 1)], [(1, 0), (1, 1)], [(2, 0), (2, 1)]]
twoDementionArray[safe: 3]?[safe: 4]
twoDementionArray[safe: 2]?[safe: 1]


// WastingTimeOnStackOverflowTests.swift Created by mason on 2016-09-18.

import XCTest

/// Measures performance of two different ways of checking whether an index is valid
/// for a given array (the variable "a" is an array of 1,000,000 unique strings, and
/// "val" is the index to be checked):
///
///     a.indices.contains(val)
/// vs:
///     val > 0 && val < (a.count - 1)
//
/// Each test checks the validity of 2,192 different integers, using one of the two
/// methods. The end result is that both ways are fast and any difference is extremely
/// marginal. (Hard to measure since it is so small, but the second way might be on the
/// order of 0.00000005 seconds faster.) Therfore, I will use the first (IMO less
/// puke-looking) method henceforth.
///
/// Related SO discussion: http://stackoverflow.com/a/35512668/164017

class WastingTimeOnStackOverflowTests: XCTestCase {
    
    func makeArray(_ count: Int) -> [String] {
        var a: [String] = []
        for _ in 0..<count {
            a.append(UUID().uuidString)
        }
        return a;
    }
    
    func test_performance_of_array_indices_contains() {
        
        let a = makeArray(1_000)
        var results: [Bool] = []
        
        self.measure {
            
            for val in self.testValues {
                
                let indexIsValid = a.indices.contains(val)
                results.append(indexIsValid)
            }
        }
    }
    
    func test_performance_of_manual_index_check() {
        
        let a = makeArray(1_000)
        var results: [Bool] = []
        
        self.measure {
            
            for val in self.testValues {
                
                let indexIsValid = val > 0 && val < (a.count - 1)
                results.append(indexIsValid)
            }
        }
    }
    
    // The testValues array contains 2192 integers:
    let testValues  = [8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, 8, 6, 7, 5, 3, 0, 9, 483989, 100_000_000, 453453, 43, 34535, 6456566, 234433242, ]
}

class TestObserver : NSObject, XCTestObservation {
    func testCase(_ testCase: XCTestCase, didFailWithDescription description: String, inFile filePath: String?, atLine lineNumber: Int) {
        print("🚫 \(description) line:\(lineNumber)")
    }
    
    func testCaseDidFinish(_ testCase: XCTestCase) {
        if testCase.testRun?.hasSucceeded == true {
            print("✅ \(testCase)")
            print("---------------------------------")
        }
    }
}
let observer = TestObserver()
XCTestObservationCenter.shared.addTestObserver(observer)

WastingTimeOnStackOverflowTests.defaultTestSuite.run()


